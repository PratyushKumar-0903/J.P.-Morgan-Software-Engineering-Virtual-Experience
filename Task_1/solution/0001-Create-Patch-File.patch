From 33d169f2421711c960c7e7aeba7a364e060b69c7 Mon Sep 17 00:00:00 2001
From: Pratyush Kumar <prtyush0903@gmail.com>
Date: Mon, 11 Apr 2022 19:50:57 +0000
Subject: [PATCH] Create Patch File

---
 client3.py     | 14 +++++++-------
 client_test.py |  4 ++++
 2 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..1358cce 100644
--- a/client3.py
+++ b/client3.py
@@ -35,25 +35,25 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if (price_b==0):
+    return
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
 
 	# Query the price once every N seconds.
-	for _ in iter(range(N)):
+	for _ in range(N):
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+      prices[stock]=price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..04753b8 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for i in quotes:
+      self.assertEqual(getDataPoint(i),(i['stock'],i['top_bid']['price'],i['top_ask']['price'],(i['top_bid']['price']+i['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,6 +17,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for i in quotes:
+      self.assertEqual(getDataPoint(i),(i['stock'],i['top_bid']['price'],i['top_ask']['price'],(i['top_bid']['price']+i['top_ask']['price'])/2))
 
 
   """ ------------ Add more unit tests ------------ """
-- 
2.17.1

